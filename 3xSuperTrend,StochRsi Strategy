//@version=5
strategy(title='3xSupertrend,200Ema Strategy', overlay=true , currency=currency.TRY , commission_type=strategy.commission.percent , commission_value=0.2 , initial_capital=100 , default_qty_type=strategy.percent_of_equity , default_qty_value = 100 )

// STOKASTİK RSİ

smoothK = input.int(3, 'K', minval=1,group="STOKASTİK RSI")
smoothD = input.int(3, 'D', minval=1,group="STOKASTİK RSI")
lengthRSI = input.int(14, 'RSI Length', minval=1,group="STOKASTİK RSI")
lengthStoch = input.int(14, 'Stochastic Length', minval=1,group="STOKASTİK RSI")
srcrsi = input(close, title='RSI Source',group="STOKASTİK RSI")
rsi1 = ta.rsi(srcrsi, lengthRSI)
k = ta.sma(ta.stoch(rsi1, rsi1, rsi1, lengthStoch), smoothK)
d = ta.sma(k, smoothD)
//h0 = hline(80, 'Upper Band', color=#606060)
//h1 = hline(20, 'Lower Band', color=#606060)


// STOKASTİK

periodK = input.int(14, title="%K Length", minval=1,group="STOKASTİK")
smoothK1 = input.int(1, title="%K Smoothing", minval=1,group="STOKASTİK")
periodD = input.int(3, title="%D Smoothing", minval=1,group="STOKASTİK")
k1 = ta.sma(ta.stoch(close, high, low, periodK), smoothK1)
d1 = ta.sma(k1, periodD)
//plot(k, title="%K", color=#2962FF)
//plot(d, title="%D", color=#FF6D00)
//h0 = hline(80, "Upper Band", color=#787B86)
//hline(50, "Middle Band", color=color.new(#787B86, 50))
//h1 = hline(20, "Lower Band", color=#787B86)
//fill(h0, h1, color=color.rgb(33, 150, 243, 90), title="Background")

// 200 EMA
lenema = input.int(200, minval=1, title='Length EMA',group="200 EMA")
srcema = input.source(close, title='Source',group="200 EMA")
offset = input.int(title='Offset', defval=0, minval=-500, maxval=500,group="200 EMA")
ema200 = ta.ema(srcema, lenema)
plot(ema200, title='EMA', color=color.new(color.white, 0), offset=offset)

// SUPERTREND 12,3

atrPeriod = input.int(12, 'ATR Length',group="SUPERTREND 1")
factor = input.int(3, 'Factor',group="SUPERTREND 1")

[supertrend, direction] = ta.supertrend(factor, atrPeriod)

bodyMiddle = plot((open + close) / 2, display=display.none)
upTrend = plot(direction < 0 ? supertrend : na, 'Up Trend', color=color.new(color.green, 0), style=plot.style_linebr)
downTrend = plot(direction < 0 ? na : supertrend, 'Down Trend', color=color.new(color.red, 0), style=plot.style_linebr)

// SUPERTREND 11,2

atrPeriod2 = input.int(11, 'ATR Length 2',group="SUPERTREND 2")
factor2 = input.int(2, 'Factor 2',group="SUPERTREND 2")

[supertrend2, direction2] = ta.supertrend(factor2, atrPeriod2)

bodyMiddle2 = plot((open + close) / 2, display=display.none)
upTrend2 = plot(direction2 < 0 ? supertrend2 : na, 'Up Trend', color=color.new(color.green, 0), style=plot.style_linebr)
downTrend2 = plot(direction2 < 0 ? na : supertrend2, 'Down Trend', color=color.new(color.red, 0), style=plot.style_linebr)


// SUPERTREND 10,1

atrPeriod3 = input.int(10, 'ATR Length 3 ',group="SUPERTREND 3")
factor3 = input.int(1, 'Factor 3',group="SUPERTREND 3")

[supertrend3, direction3] = ta.supertrend(factor3, atrPeriod3)

bodyMiddle3 = plot((open + close) / 2, display=display.none)
upTrend3 = plot(direction3 < 0 ? supertrend3 : na, 'Up Trend', color=color.new(color.green, 0), style=plot.style_linebr)
downTrend3 = plot(direction3 < 0 ? na : supertrend3, 'Down Trend', color=color.new(color.red, 0), style=plot.style_linebr)

// ATR Bands

//srcUpper = input.source(title = "Source Upper", defval = close,group="ATR BANDS")
//srcLower = input.source(title = "Source Lower",  defval = close,group="ATR BANDS")
atrMultiplierUpper = input.int(title = "ATR Multiplier Upper", defval = 3,group="ATR BANDS")
atrMultiplierLower = input.int(title = "ATR Multiplier Lower", defval = 3,group="ATR BANDS")

// ATR
atr = ta.atr(atrPeriod)

// Plotting
//plot(srcUpper + atr * atrMultiplierUpper, color = color.green)
//plot(srcLower - atr * atrMultiplierLower, color = color.red)

//TSV
l  = input.int(13, title="Length",group="TSV")
l_ma = input.int(7, title="MA Length",group="TSV")

//t = sum(close>close[1]?volume*close-close[1]:close<close[1]?(volume*-1)*close-close:0,l)
// previous line is non sensical. The correct version follows
t = math.sum(close>close[1]?volume*(close-close[1]):close<close[1]?volume*(close-close[1]):0,l)
m = ta.sma(t ,l_ma )


// Strategy Year

StartYear = input.int(defval=2021,step = 1 ,minval = 2010 ,maxval= 2023,title="Start Year", group="Strategy Options")
StartMonth = input.int(defval=1,step = 1,minval = 1 ,maxval = 12 ,title="Start Month",group="Strategy Options")
StartDay = input.int(defval=1,step = 1,minval = 1 ,maxval = 30 ,title="Start Day",group="Strategy Options")
TestPeriodStart = timestamp(year =StartYear,month= StartMonth,day = StartDay)
//FinishYear = input.int(defval=2022,step = 1 ,minval = 2010 ,maxval= 2023,title="Finish Year", group="Strategy Options")
//FinishMonth = input.int(defval=1,step = 1,minval = 1 ,maxval = 12 ,title="Finish Month",group="Strategy Options")
//FinishDay = input.int(defval=1,step = 1,minval = 1 ,maxval = 30 ,title="Finish Day",group="Strategy Options")
//TestPeriodStop = timestamp(year =FinishYear,month =FinishMonth,day = FinishDay)

TestPeriod () => 
    time >= TestPeriodStart ? true : false
    
// Stratejy Entry and Strategy Rules

entryprice = strategy.opentrades.entry_price(strategy.opentrades - 1)
entrytime = strategy.opentrades.entry_time(strategy.opentrades - 1 )
entrybarindex = bar_index - strategy.opentrades.entry_bar_index(strategy.opentrades - 1 )


// Conditions
stokastikrsicrosslong = k<20 and d<20 and ta.crossover(k,d)
klow20 = k[1]<20 and ta.crossover(k,d)
stokastikcrosslong = k1<20 and d1<20 and ta.crossover(k1,d1)


stokastikrsicrossshort = k>80 and d>80 and ta.crossunder(k,d)
khigh80 = k[1]>80 and ta.crossunder(k,d)
stokastikcrossshort = k1>80 and d1>80 and ta.crossunder(k1,d1)


LongCondition = close > ema200 and (stokastikrsicrosslong and klow20) and t>0 and ((direction == -1 and direction2 == -1) or (direction == -1 and direction3 == -1) or (direction2 == -1 and direction3 == -1))

ShortCondition = close < ema200 and (stokastikrsicrossshort and khigh80) and t<0 and ((direction == 1 and direction2 == 1 ) or (direction == 1 and direction3 == 1 ) or (direction2 == 1 and direction3 ==1 ))


// TP and SL

TPatr = input.float(defval=1.0 ,step=0.1 ,minval = 0.5 ,title="Take Profit ATR",group="Strategy Options")
SLatr = input.float(defval=1.0 ,step=0.1 ,minval = 0.5 ,title="Stop Loss ATR",group="Strategy Options")

buyTP = close >= entryprice + atr[entrybarindex] * atrMultiplierUpper 
buySL = (close <= entryprice - atr[entrybarindex] * atrMultiplierLower ) or (close < ema200)

sellTP = close <= entryprice - atr[entrybarindex] * atrMultiplierLower  
sellSL = (close >= entryprice + atr[entrybarindex] * atrMultiplierUpper ) or (close > ema200)

if (LongCondition) and TestPeriod ()
    strategy.entry('LONG', strategy.long)
if buyTP and TestPeriod () 
    strategy.close("LONG",comment = "BUY take profit") 
if buySL and TestPeriod () 
    strategy.close("LONG",comment = "BUY stop loss") 

if (ShortCondition) and TestPeriod ()
    strategy.entry('SHORT', strategy.short) 
if sellTP and TestPeriod ()
    strategy.close("SHORT",comment = "SELL take profit") 
if sellSL and TestPeriod ()
    strategy.close("SHORT",comment = "SELL stop loss") 
    
plotshape(LongCondition,title="LONG",style=shape.labeldown,location= location.belowbar,color = color.green,text="LONG",textcolor=color.white)
plotshape(ShortCondition,title="SHORT",style=shape.labelup,location= location.abovebar,color = color.red,text="SHORT",textcolor=color.white)



